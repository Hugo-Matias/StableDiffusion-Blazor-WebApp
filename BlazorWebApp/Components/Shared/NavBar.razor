@inject ManagerService M
@implements IDisposable

<div>
    <MudNavMenu Class="navbar-horizontal" Rounded>
        <MudNavLink Href="/" Match=NavLinkMatch.All><i class="fas fa-images me-1" /> Gallery</MudNavLink>
        <MudNavLink Href="/txt2img" Match=NavLinkMatch.Prefix Disabled=@(M.Projects.Count == 0 || !M.IsWebuiUp)><i class="fa-regular fa-file-lines me-1" /> Txt2Img</MudNavLink>
        <MudNavLink Href="/img2img" Match=NavLinkMatch.Prefix Disabled=@(M.Projects.Count == 0 || !M.IsWebuiUp)><i class="fa-regular fa-file-image me-1" /> Img2Img</MudNavLink>
        <MudNavLink Href="/upscale" Match=NavLinkMatch.Prefix Disabled=@(M.Projects.Count == 0 || !M.IsWebuiUp)><i class="fa-solid fa-panorama me-1" /> Upscale</MudNavLink>
        <MudNavLink Href="/resources" Match=NavLinkMatch.Prefix><i class="fa-solid fa-download me-1" /> Resources</MudNavLink>
        <MudNavLink Href="/prompts" Match=NavLinkMatch.Prefix><i class="fa-solid fa-quote-left me-1" /> Prompts</MudNavLink>
    </MudNavMenu>
</div>

@code {
    protected override void OnInitialized()
    {
        M.OnWebuiStateChanged += Refresh;
        M.OnProjectsChange += Refresh;
    }

    private async void Refresh() => await InvokeAsync(StateHasChanged);

    public void Dispose()
    {
        M.OnWebuiStateChanged -= Refresh;
        M.OnProjectsChange -= Refresh;
    }
}
