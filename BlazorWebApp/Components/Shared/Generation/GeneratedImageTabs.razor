@inject ManagerService M
@inject ImageService ImageService
@implements IDisposable

<MudTabs Elevation="1" PanelClass="pa-3 d-flex flex-column align-items-center" Rounded Centered>
    <MudTabPanel Text="Preview">
        @if (M.GeneratedImageEntities != null && M.GeneratedImageEntities.Images != null)
        {
            <ImageCarousel Images="M.GeneratedImageEntities.Images" MaxWidth="40vw" MaxHeight="50vh" ShowControls AutoCycle />
            <br />
            @if (M.ImagesInfo != null)
            {
                <span class="generation-info-text"><small>@M.ImagesInfo.InfoTexts[0]</small></span>
            }
            else if (M.GeneratedUpscaleImage.Info != null)
            {
                <span class="generation-info-text"><small>@M.GeneratedUpscaleImage.Info</small></span>
            }
        }
        else
        {
            <MudImage Src=@($"./no_image.png") Style="min-width: 100%;" Width=512 Height=512 ObjectFit="ObjectFit.Contain" Fluid />
        }
    </MudTabPanel>
    <MudTabPanel Text="Generated">
        @if (M.GeneratedImageEntities != null)
        {
            <ImagesContainer Images="M.GeneratedImageEntities" />
        }
        else
        {
            <MudImage Src=@($"./no_image.png") Style="min-width: 100%;" Width=512 Height=512 ObjectFit="ObjectFit.Contain" Fluid />
        }
    </MudTabPanel>
    <MudTabPanel Text="Progress">
        @if (M.Progress.State != null && M.IsConverging)
        {
            var value = M.Progress.Value * 100;
            <MudProgressLinear Style="height: 1.3rem !important;" Color="Color.Secondary" Value="@value" Min=0 Max=100 Class="mb-5" Rounded>
            <MudText Typo="Typo.caption" Class="py-2">
                <strong>@((int)value)%</strong>
                    @if (!string.IsNullOrWhiteSpace(M.Progress.State.Job))
                    {
                        <small> | @M.Progress.State.Job</small>
                    }
                </MudText>
            </MudProgressLinear>
            if (M.Progress.CurrentImage != null)
            {
                <MudImage Src=@($"data:image/png;base64,{M.Progress.CurrentImage}") Style="min-width: 100%;" Width=512 Height=512 ObjectFit="ObjectFit.Contain" Fluid />
            }
        }
        else
        {
            <MudImage Src=@($"./no_image.png") Style="min-width: 100%;" Width=512 Height=512 ObjectFit="ObjectFit.Contain" Fluid />
        }
    </MudTabPanel>
</MudTabs>

@code {
    protected override void OnInitialized()
    {
        ImageService.OnChange += Refresh;
    }

    public void Dispose() => ImageService.OnChange -= Refresh;

    private async void Refresh() => await InvokeAsync(StateHasChanged);
}
