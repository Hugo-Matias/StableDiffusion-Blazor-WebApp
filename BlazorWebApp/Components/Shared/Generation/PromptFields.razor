@inject AppState AppState

<EditForm Model="Parameters">
    <div class="card p-3 mb-3">
        <div class="row">
            <div class="col-9">
                <label class="form-label" for="prompt">Prompt</label>
                <div class="input-group">
                    <input class="form-control mb-3" placeholder="Enter your prompt here..." id="prompt" @bind-value="@Parameters.Prompt" />
                    <TagOffcanvas CsvTags="@AppState.CsvTags" OnAppendTags="OnPromptTagAppended" OffscreenId="prompt-tags" />
                    <button class="btn btn-outline-secondary" @onclick="() => Parameters.Prompt = string.Empty"><span class="fa-solid fa-delete-left"></span></button>
                </div>

                <label class="form-label" for="negativePrompt">Negative Prompt</label>
                <div class="input-group">
                    <input class="form-control mb-3" placeholder="Prompt for things you don't want to generate..." id="negativePrompt" @bind-value="@Parameters.NegativePrompt" />
                    <TagOffcanvas CsvTags="@AppState.CsvTags" OnAppendTags="OnNegativePromptTagAppended" OffscreenId="negative-prompt-tags"/>
                    <button class="btn btn-outline-secondary" @onclick="() => Parameters.NegativePrompt = string.Empty"><span class="fa-solid fa-delete-left"></span></button>
                </div>
            </div>
            <div class="col-3">
                <StylesSelector />
                <GenerateButton Parameters="Parameters" OnGenerate="OnGenerate" OnSkip="OnSkip" OnInterrupt="OnInterrupt" />
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public SharedParameters Parameters { get; set; }
    [Parameter]
    public EventCallback OnGenerate { get; set; }
    [Parameter]
    public EventCallback OnSkip { get; set; }
    [Parameter]
    public EventCallback OnInterrupt { get; set; }
    [Parameter]
    public EventCallback<SharedParameters> ParametersChanged { get; set; }
    [Parameter]
    public EventCallback<AppendedTags> OnPromptTagAppended { get; set; }
    [Parameter]
    public EventCallback<AppendedTags> OnNegativePromptTagAppended { get; set; }
}
