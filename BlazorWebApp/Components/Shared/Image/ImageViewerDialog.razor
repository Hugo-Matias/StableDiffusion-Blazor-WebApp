@inject ImageService ImageService
@inject DatabaseService DB

<div>
    <MudDialog Style=@($"max-width: 98vw; max-height: 98vh; background-color: var(--mud-palette-{Color});")>
        <TitleContent>
            <MudContainer Class="mb-4 d-flex flex-row justify-content-center">
                <MudStack Row=true>
                    @if (Images.Count > 1)
                    {
                        <MudIconButton OnClick="@(() => Carousel.Reference.Previous())" Icon="fa-solid fa-chevron-left" />
                        <MudMenu Icon="fa-solid fa-play" TransformOrigin="Origin.TopCenter" AnchorOrigin="Origin.BottomCenter">
                            <MudStack Row=true Class="pa-3">
                                <MudNumericField @bind-Value=_autoCycleSeconds HideSpinButtons=true Adornment="Adornment.End" AdornmentIcon="fa-solid fa-forward" OnAdornmentClick="() => Carousel.SetAutoCycleTime(TimeSpan.FromSeconds(_autoCycleSeconds))" Label="Delay (sec.)" Min="0.01f" Step=0.01f T="float" />
                                <MudIconButton OnClick="@(() => _autoCycle = !_autoCycle)" Icon=@($"fa-solid {(_autoCycle ? "fa-pause" : "fa-play")}") />
                            </MudStack>
                        </MudMenu>
                        <MudIconButton OnClick="@(() => Carousel.Reference.Next())" Icon="fa-solid fa-chevron-right" />
                    }
                    <MudIconButton OnClick=@(() => _showInfo = !_showInfo) Style="position: absolute; right: 6rem;" Icon=@("fa-solid fa-info") />
                    <MudIconButton OnClick=ExpandCarousel Style="position: absolute; right: 3.5rem;" Icon=@("fa-regular fa-window-maximize") />
                </MudStack>
            </MudContainer>
        </TitleContent>
        <DialogContent>
            <MudStack AlignItems="AlignItems.Center" Class="carousel-container">
                <ImageCarousel @ref=Carousel AutoCycle=_autoCycle Images="Images" MaxWidth="95vw" MaxHeight="90vh" OnImageChanged="UpdateImageInfo" />
                <MudStack Class=@($"image-info {(_showInfo ? "show" : "")}")>
                    <MudText Style="text-align: center;" Typo="Typo.caption" Color="MudBlazor.Color.Success">@_prompt</MudText>
                    <MudText Typo="Typo.caption" Color="MudBlazor.Color.Error">@_negativePrompt</MudText>
                </MudStack>
            </MudStack>
        </DialogContent>
    </MudDialog>
</div>

@code {
    [CascadingParameter] public MudDialogInstance MudDialog { get; set; }
    [Parameter] public List<Image> Images { get; set; }
    [Parameter] public string Color { get; set; } = "dark";

    public ImageCarousel? Carousel { get; set; } = new();

    private bool _autoCycle;
    private bool _expand;
    private bool _showInfo;
    private string _prompt;
    private string _negativePrompt;
    private float _autoCycleSeconds = 5f;

    protected override void OnInitialized()
    {
        UpdateImageInfo(0);
    }

    private void UpdateImageInfo(int index)
    {
        _prompt = Images[index].Prompt;
        _negativePrompt = Images[index].NegativePrompt;
    }

    private void ExpandCarousel()
    {
        _expand = !_expand;
        Carousel.Exand(_expand);
    }
}
