@inject ManagerService M
@inject DatabaseService DB

<MudDialog>
    <DialogContent>
        <MudSelect Label="Folder" Class="mb-4" Value=_currentFolderId ValueChanged=HandleFolderChanged T="int">
            <MudSelectItem Value=0>All</MudSelectItem>
            @foreach (var folder in _folders)
            {
                <MudSelectItem Value="@folder.Id">@folder.Name</MudSelectItem>
            }
        </MudSelect>
        <MudSelect Label="Project" Class="mb-4" Value=_currentProjectId ValueChanged=HandleProjectChanged T="int">
            @foreach (var project in _projects)
            {
                <MudSelectItem Value="@project.Id">@project.Name</MudSelectItem>
            }
        </MudSelect>
        @if (_latestProjects != null)
        {
            <MudStack>
                <MudText Typo="Typo.caption">Latest Used Projects</MudText>
                <MudButtonGroup>
                    @foreach (var project in _latestProjects)
                    {
                        <MudButton OnClick="() => HandleLatestProjectClicked(project)">@project.Name</MudButton>
                    }
                </MudButtonGroup>
            </MudStack>
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick=@(() => MudDialog.Close(DialogResult.Ok(Images))) Variant=Variant.Filled Color="Color.Success">Save</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] public MudDialogInstance MudDialog { get; set; }
    [Parameter] public List<Image> Images { get; set; }
    private int _currentFolderId;
    private int _currentProjectId;
    private List<Folder> _folders;
    private List<Project> _projects;
    private List<Project>? _latestProjects;

    protected async override Task OnInitializedAsync()
    {
        _folders = await DB.GetFolders();
        _currentProjectId = Images[0].ProjectId;
        var imageProject = await DB.GetProject(_currentProjectId);
        _currentFolderId = imageProject.FolderId ?? 0;
        await GetProjects();
        _latestProjects = await DB.GetLastUsedProjects(5, new int[1] { M.State.Gallery.ProjectId });
    }

    private async Task GetProjects() => _projects = await DB.GetProjects(_currentFolderId);

    private async Task HandleFolderChanged(int id)
    {
        _currentFolderId = id;
        await GetProjects();
    }

    private void HandleProjectChanged(int id)
    {
        _currentProjectId = id;
        foreach (var image in Images)
        {
            image.ProjectId = id;
        }
    }

    private void HandleLatestProjectClicked(Project project)
    {
        HandleProjectChanged(project.Id);
        MudDialog.Close(DialogResult.Ok(Images));
    }
}
